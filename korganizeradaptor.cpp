/*
 * This file was generated by dbusidl2cpp version 0.6
 * Command line was: dbusidl2cpp -m -a korganizeradaptor -- org.kde.korganizer.Korganizer.xml
 *
 * dbusidl2cpp is Copyright (C) 2006 Trolltech AS. All rights reserved.
 *
 * This is an auto-generated file.
 * This file may have been hand-edited. Look for HAND-EDIT comments
 * before re-generating it.
 */

#include "korganizeradaptor.h"
#include <QtCore/QMetaObject>
#include <QtCore/QByteArray>
#include <QtCore/QList>
#include <QtCore/QMap>
#include <QtCore/QString>
#include <QtCore/QStringList>
#include <QtCore/QVariant>

/*
 * Implementation of adaptor class KorganizerAdaptor
 */

KorganizerAdaptor::KorganizerAdaptor(QObject *parent)
    : QDBusAbstractAdaptor(parent)
{
    // constructor
    setAutoRelaySignals(true);
}

KorganizerAdaptor::~KorganizerAdaptor()
{
    // destructor
}

bool KorganizerAdaptor::addIncidence(const QString &ical)
{
    // handle method call org.kde.korganizer.Korganizer.addIncidence
    bool out0;
    QMetaObject::invokeMethod(parent(), "addIncidence", Q_RETURN_ARG(bool, out0), Q_ARG(QString, ical));

    // Alternative:
    //out0 = static_cast<YourObjectType *>(parent())->addIncidence(ical);
    return out0;
}

void KorganizerAdaptor::closeURL()
{
    // handle method call org.kde.korganizer.Korganizer.closeURL
    QMetaObject::invokeMethod(parent(), "closeURL");

    // Alternative:
    //static_cast<YourObjectType *>(parent())->closeURL();
}

bool KorganizerAdaptor::deleteIncidence(const QString &url, bool force)
{
    // handle method call org.kde.korganizer.Korganizer.deleteIncidence
    bool out0;
    QMetaObject::invokeMethod(parent(), "deleteIncidence", Q_RETURN_ARG(bool, out0), Q_ARG(QString, url), Q_ARG(bool, force));

    // Alternative:
    //out0 = static_cast<YourObjectType *>(parent())->deleteIncidence(url, force);
    return out0;
}

bool KorganizerAdaptor::deleteIncidence(const QString &url)
{
    // handle method call org.kde.korganizer.Korganizer.deleteIncidence
    bool out0;
    QMetaObject::invokeMethod(parent(), "deleteIncidence", Q_RETURN_ARG(bool, out0), Q_ARG(QString, url));

    // Alternative:
    //out0 = static_cast<YourObjectType *>(parent())->deleteIncidence(url);
    return out0;
}

bool KorganizerAdaptor::editIncidence(const QString &url)
{
    // handle method call org.kde.korganizer.Korganizer.editIncidence
    bool out0;
    QMetaObject::invokeMethod(parent(), "editIncidence", Q_RETURN_ARG(bool, out0), Q_ARG(QString, url));

    // Alternative:
    //out0 = static_cast<YourObjectType *>(parent())->editIncidence(url);
    return out0;
}

bool KorganizerAdaptor::getCurrentURLasString()
{
    // handle method call org.kde.korganizer.Korganizer.getCurrentURLasString
    bool out0;
    QMetaObject::invokeMethod(parent(), "getCurrentURLasString", Q_RETURN_ARG(bool, out0));

    // Alternative:
    //out0 = static_cast<YourObjectType *>(parent())->getCurrentURLasString();
    return out0;
}

bool KorganizerAdaptor::mergeURL(const QString &url)
{
    // handle method call org.kde.korganizer.Korganizer.mergeURL
    bool out0;
    QMetaObject::invokeMethod(parent(), "mergeURL", Q_RETURN_ARG(bool, out0), Q_ARG(QString, url));

    // Alternative:
    //out0 = static_cast<YourObjectType *>(parent())->mergeURL(url);
    return out0;
}

bool KorganizerAdaptor::openURL(const QString &url)
{
    // handle method call org.kde.korganizer.Korganizer.openURL
    bool out0;
    QMetaObject::invokeMethod(parent(), "openURL", Q_RETURN_ARG(bool, out0), Q_ARG(QString, url));

    // Alternative:
    //out0 = static_cast<YourObjectType *>(parent())->openURL(url);
    return out0;
}

bool KorganizerAdaptor::saveAsURL(const QString &url)
{
    // handle method call org.kde.korganizer.Korganizer.saveAsURL
    bool out0;
    QMetaObject::invokeMethod(parent(), "saveAsURL", Q_RETURN_ARG(bool, out0), Q_ARG(QString, url));

    // Alternative:
    //out0 = static_cast<YourObjectType *>(parent())->saveAsURL(url);
    return out0;
}

bool KorganizerAdaptor::saveURL()
{
    // handle method call org.kde.korganizer.Korganizer.saveURL
    bool out0;
    QMetaObject::invokeMethod(parent(), "saveURL", Q_RETURN_ARG(bool, out0));

    // Alternative:
    //out0 = static_cast<YourObjectType *>(parent())->saveURL();
    return out0;
}

bool KorganizerAdaptor::showIncidence(const QString &uid)
{
    // handle method call org.kde.korganizer.Korganizer.showIncidence
    bool out0;
    QMetaObject::invokeMethod(parent(), "showIncidence", Q_RETURN_ARG(bool, out0), Q_ARG(QString, uid));

    // Alternative:
    //out0 = static_cast<YourObjectType *>(parent())->showIncidence(uid);
    return out0;
}

bool KorganizerAdaptor::showIncidenceContext(const QString &uid)
{
    // handle method call org.kde.korganizer.Korganizer.showIncidenceContext
    bool out0;
    QMetaObject::invokeMethod(parent(), "showIncidenceContext", Q_RETURN_ARG(bool, out0), Q_ARG(QString, uid));

    // Alternative:
    //out0 = static_cast<YourObjectType *>(parent())->showIncidenceContext(uid);
    return out0;
}


#include "korganizeradaptor.moc"
